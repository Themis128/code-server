name: Publish code-server

on:
  # Shows the manual trigger in GitHub UI
  # helpful as a back-up in case the GitHub Actions Workflow fails
  workflow_dispatch:

  release:
    types: [released]

permissions:
  id-token: write
  contents: read

# Cancel in-progress runs for pull requests when developers push
# additional changes, and serialize builds in branches.
# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-concurrency-to-cancel-any-in-progress-job-or-run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code-server
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::479331373192:role/unionai-code-server-github-actions
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Public ECR Login
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/p0i0a9q8

      - name: Get version
        id: version
        run: echo "::set-output name=version::$(jq -r .version package.json)"

      - name: Download release artifacts
        uses: robinraju/release-downloader@v1.5
        with:
          repository: "coder/code-server"
          tag: v${{ steps.version.outputs.version }}
          fileName: "*.deb"
          out-file-path: "release-packages"

      - name: Publish to Docker
        run: yarn publish:docker
        env:
          GITHUB_TOKEN: ${{ github.token }}
